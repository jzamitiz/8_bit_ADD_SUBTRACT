$date
	Wed Sep 23 00:56:45 2020
$end

$version
	Synopsys VCS version P-2019.06-1
$end

$timescale
	1ns
$end

$comment Csum: 1 2977addcde7d2133 $end


$scope module testbench $end
$var reg 8 ! result [7:0] $end
$var reg 1 " overflow $end
$var reg 32 # expected_result [31:0] $end
$var reg 32 $ expected_overflow [31:0] $end
$var reg 32 % fail [31:0] $end
$var reg 32 & is_subtract [31:0] $end
$var reg 32 ' opA [31:0] $end
$var reg 32 ( opB [31:0] $end

$scope module dut $end
$var reg 8 ) data0 [7:0] $end
$var reg 8 * data1 [7:0] $end
$var reg 8 + data2 [7:0] $end
$var reg 8 , data3 [7:0] $end
$var reg 5 - opcode [4:0] $end
$var reg 8 ! result [7:0] $end
$var reg 1 " overflow $end
$var reg 8 . A [7:0] $end
$var reg 8 / B [7:0] $end
$upscope $end

$upscope $end

$enddefinitions $end

#0
$dumpvars
0"
b00001100 .
b00001100 /
b00001100 )
b00110110 *
b01111011 +
b11101001 ,
b00000 -
b00011000 !
b00000000000000000000000000000000 $
b00000000000000000000000000000000 #
b00000000000000000000000000000000 %
b00000000000000000000000000000000 &
b00000000000000000000000000000000 '
b00000000000000000000000000000000 (
$end
#10
b00000000000000000000000000011000 #
b00000000000000000000000000000001 (
b00001 -
b00110110 /
b01000010 !
#20
b00000000000000000000000001000010 #
b00000000000000000000000000000010 (
b00010 -
b01111011 /
1"
b10000111 !
#30
b00000000000000000000000010000111 #
b00000000000000000000000000000001 $
b00000000000000000000000000000011 (
b00011 -
b11101001 /
0"
b11110101 !
#40
b00000000000000000000000011110101 #
b00000000000000000000000000000000 $
b00000000000000000000000000000100 (
b00000000000000000000000000000001 '
b00000000000000000000000000000000 (
b00100 -
b00110110 .
b00001100 /
b01000010 !
#50
b00000000000000000000000001000010 #
b00000000000000000000000000000001 (
b00101 -
b00110110 /
b01101100 !
#60
b00000000000000000000000001101100 #
b00000000000000000000000000000010 (
b00110 -
b01111011 /
1"
b10110001 !
#70
b00000000000000000000000010110001 #
b00000000000000000000000000000001 $
b00000000000000000000000000000011 (
b00111 -
b11101001 /
0"
b00011111 !
#80
b00000000000000000000000100011111 #
b00000000000000000000000000000000 $
b00000000000000000000000000000100 (
b00000000000000000000000000000010 '
b00000000000000000000000000000000 (
b01000 -
b01111011 .
b00001100 /
1"
b10000111 !
#90
b00000000000000000000000010000111 #
b00000000000000000000000000000001 $
b00000000000000000000000000000001 (
b01001 -
b00110110 /
b10110001 !
#100
b00000000000000000000000010110001 #
b00000000000000000000000000000010 (
b01010 -
b01111011 /
b11110110 !
#110
b00000000000000000000000011110110 #
b00000000000000000000000000000011 (
b01011 -
b11101001 /
0"
b01100100 !
#120
b00000000000000000000000101100100 #
b00000000000000000000000000000000 $
b00000000000000000000000000000100 (
b00000000000000000000000000000011 '
b00000000000000000000000000000000 (
b01100 -
b11101001 .
b00001100 /
1"
0"
b11110101 !
#130
b00000000000000000000000011110101 #
b00000000000000000000000000000001 (
b01101 -
b00110110 /
1"
0"
b00011111 !
#140
b00000000000000000000000100011111 #
b00000000000000000000000000000010 (
b01110 -
b01111011 /
b01100100 !
#150
b00000000000000000000000101100100 #
b00000000000000000000000000000011 (
b01111 -
b11101001 /
b11010010 !
#160
b00000000000000000000000111010010 #
b00000000000000000000000000000100 (
b00000000000000000000000000000100 '
b00000000000000000000000000000001 &
b00000000000000000000000000000000 '
b00000000000000000000000000000000 (
b10000 -
b00000000 !
b00001100 .
b00001100 /
#170
b00000000000000000000000000000000 #
b00000000000000000000000000000001 (
b10001 -
b00110110 /
1"
0"
b11010110 !
#180
b11111111111111111111111111010110 #
b00000000000000000000000000000010 (
b10010 -
b01111011 /
b10010001 !
#190
b11111111111111111111111110010001 #
b00000000000000000000000000000011 (
b10011 -
b11101001 /
b00100011 !
#200
b11111111111111111111111100100011 #
b00000000000000000000000000000100 (
b00000000000000000000000000000001 '
b00000000000000000000000000000000 (
b10100 -
b00110110 .
b00001100 /
1"
0"
b00101010 !
#210
b00000000000000000000000000101010 #
b00000000000000000000000000000001 (
b10101 -
b00110110 /
b00000000 !
#220
b00000000000000000000000000000000 #
b00000000000000000000000000000010 (
b10110 -
b01111011 /
1"
0"
b10111011 !
#230
b11111111111111111111111110111011 #
b00000000000000000000000000000011 (
b10111 -
b11101001 /
b01001101 !
#240
b11111111111111111111111101001101 #
b00000000000000000000000000000100 (
b00000000000000000000000000000010 '
b00000000000000000000000000000000 (
b11000 -
b01111011 .
b00001100 /
1"
0"
b01101111 !
#250
b00000000000000000000000001101111 #
b00000000000000000000000000000001 (
b11001 -
b00110110 /
b01000101 !
#260
b00000000000000000000000001000101 #
b00000000000000000000000000000010 (
b11010 -
b01111011 /
b00000000 !
#270
b00000000000000000000000000000000 #
b00000000000000000000000000000011 (
b11011 -
b11101001 /
1"
b10010010 !
#280
b11111111111111111111111110010010 #
b00000000000000000000000000000001 $
b00000000000000000000000000000100 (
b00000000000000000000000000000011 '
b00000000000000000000000000000000 (
b11100 -
b11101001 .
b00001100 /
0"
b11011101 !
#290
b00000000000000000000000011011101 #
b00000000000000000000000000000000 $
b00000000000000000000000000000001 (
b11101 -
b00110110 /
b10110011 !
#300
b00000000000000000000000010110011 #
b00000000000000000000000000000010 (
b11110 -
b01111011 /
1"
b01101110 !
#310
b00000000000000000000000001101110 #
b00000000000000000000000000000001 $
b00000000000000000000000000000011 (
b11111 -
b11101001 /
0"
b00000000 !
#320
b00000000000000000000000000000000 #
b00000000000000000000000000000000 $
b00000000000000000000000000000100 (
b00000000000000000000000000000100 '
b00000000000000000000000000000010 &
